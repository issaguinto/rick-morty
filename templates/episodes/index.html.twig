{% extends 'base.html.twig' %}

{% block title %}Episodes - Rick and Morty{% endblock %}

{% block body %}
<div class="container mx-auto px-4 py-8">
    <div class="text-center mb-8">
        <h1 class="text-4xl md:text-6xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-600 via-purple-600 to-green-600 mb-4">
            üé¨ Episodes
        </h1>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
            Explore all episodes from the Rick and Morty universe. Browse through seasons and discover which characters appear in each episode.
        </p>
    </div>

    <div class="mb-8">
        <a href="{{ path('app_home') }}" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-gradient-to-r from-blue-600 to-green-600 hover:from-blue-700 hover:to-green-700 transition-all duration-200 shadow-lg hover:shadow-xl">
            ‚Üê Back to Home
        </a>
    </div>

    <div class="bg-gradient-to-br from-green-600 via-blue-600 to-purple-600 shadow-xl overflow-hidden sm:rounded-xl mb-8">
        <div class="px-6 py-8">
            <h2 class="text-3xl font-bold text-white mb-6 text-center">All Episodes</h2>
            
            <div class="mb-6 max-w-md mx-auto">
                <div class="relative">
                    <input type="text" 
                           id="episodeSearchInput" 
                           placeholder="Search episodes by name..." 
                           class="w-full pl-10 pr-4 py-3 border border-white/30 rounded-lg bg-white/10 backdrop-blur-md text-white placeholder-blue-100 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-transparent">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center">
                        <svg class="h-5 w-5 text-blue-100" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                        </svg>
                    </div>
                </div>
            </div>

            <div class="mb-6 text-center">
                <div class="inline-flex flex-wrap gap-2 bg-white/10 backdrop-blur-md p-2 rounded-lg">
                    <button onclick="filterBySeason('all')" class="season-filter-btn active px-4 py-2 rounded-md text-white bg-white/20 hover:bg-white/30 transition-colors duration-200 text-sm font-medium">
                        All Seasons
                    </button>
                    <button onclick="filterBySeason('S01')" class="season-filter-btn px-4 py-2 rounded-md text-white bg-white/10 hover:bg-white/20 transition-colors duration-200 text-sm font-medium">
                        Season 1
                    </button>
                    <button onclick="filterBySeason('S02')" class="season-filter-btn px-4 py-2 rounded-md text-white bg-white/10 hover:bg-white/20 transition-colors duration-200 text-sm font-medium">
                        Season 2
                    </button>
                    <button onclick="filterBySeason('S03')" class="season-filter-btn px-4 py-2 rounded-md text-white bg-white/10 hover:bg-white/20 transition-colors duration-200 text-sm font-medium">
                        Season 3
                    </button>
                    <button onclick="filterBySeason('S04')" class="season-filter-btn px-4 py-2 rounded-md text-white bg-white/10 hover:bg-white/20 transition-colors duration-200 text-sm font-medium">
                        Season 4
                    </button>
                    <button onclick="filterBySeason('S05')" class="season-filter-btn px-4 py-2 rounded-md text-white bg-white/10 hover:bg-white/20 transition-colors duration-200 text-sm font-medium">
                        Season 5
                    </button>
                </div>
            </div>

            <div class="text-center mb-6">
                <p class="text-blue-100" id="episodeCount">Showing {{ episodes|length }} episodes</p>
            </div>

            <div id="episodeGrid" class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
                {% for episode in episodes %}
                    <div class="episode-card bg-white/10 backdrop-blur-md rounded-lg p-4 hover:bg-white/20 transition-all duration-300 border border-white/20 hover:border-white/40" 
                         data-episode-name="{{ episode.name|lower }}" 
                         data-season="{{ episode.episode|slice(0, 3) }}">
                        <div class="flex items-center justify-between mb-3">
                            <span class="bg-white/20 backdrop-blur-sm text-white text-xs font-bold px-2 py-1 rounded-full">
                                {{ episode.episode }}
                            </span>
                            <span class="text-blue-100 text-xs">{{ episode.air_date }}</span>
                        </div>
                        <h3 class="text-white font-semibold text-sm mb-3 line-clamp-2 leading-tight">
                            {{ episode.name }}
                        </h3>
                        <div>
                            <a href="{{ path('app_episode_detail', {id: episode.id}) }}" 
                               class="block w-full text-center py-1.5 px-3 bg-blue-500/70 hover:bg-blue-500/90 text-white text-xs font-medium rounded-md transition-colors duration-200 border border-blue-400/50">
                                View Details
                            </a>
                        </div>
                    </div>
                {% endfor %}
            </div>

            <div id="noEpisodes" style="display: none;" class="text-center py-12">
                <div class="text-6xl mb-4">üîç</div>
                <h3 class="text-xl font-semibold text-white mb-2">No Episodes Found</h3>
                <p class="text-blue-100">Try adjusting your search or filter criteria.</p>
            </div>
        </div>
    </div>
</div>

<script>
function filterBySeason(season) {
    const episodeCards = document.querySelectorAll('.episode-card');
    const seasonButtons = document.querySelectorAll('.season-filter-btn');
    const episodeCount = document.getElementById('episodeCount');
    const noEpisodesMessage = document.getElementById('noEpisodes');
    
    seasonButtons.forEach(btn => btn.classList.remove('active', 'bg-white/20'));
    event.target.classList.add('active', 'bg-white/20');
    
    let visibleCount = 0;
    
    episodeCards.forEach(card => {
        const cardSeason = card.getAttribute('data-season');
        
        if (season === 'all' || cardSeason === season) {
            card.style.display = 'block';
            visibleCount++;
        } else {
            card.style.display = 'none';
        }
    });
    
    if (visibleCount > 0) {
        episodeCount.textContent = `Showing ${visibleCount} episodes`;
        noEpisodesMessage.style.display = 'none';
    } else {
        episodeCount.textContent = 'No episodes found';
        noEpisodesMessage.style.display = 'block';
    }
}

document.addEventListener('DOMContentLoaded', function() {
    const episodeSearchInput = document.getElementById('episodeSearchInput');
    if (episodeSearchInput) {
        episodeSearchInput.addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const episodeCards = document.querySelectorAll('.episode-card');
            const episodeCount = document.getElementById('episodeCount');
            const noEpisodesMessage = document.getElementById('noEpisodes');
            
            let visibleCount = 0;
            
            episodeCards.forEach(card => {
                const episodeName = card.getAttribute('data-episode-name');
                
                if (episodeName && episodeName.includes(searchTerm)) {
                    card.style.display = 'block';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });
            
            if (visibleCount > 0) {
                episodeCount.textContent = `Showing ${visibleCount} episodes`;
                noEpisodesMessage.style.display = 'none';
            } else {
                episodeCount.textContent = 'No episodes found';
                noEpisodesMessage.style.display = 'block';
            }
        });
    }
});
</script>

<style>
.line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.episode-card {
    transition: all 0.3s ease;
}

.episode-card:hover {
    transform: translateY(-2px);
}

.season-filter-btn.active {
    background-color: rgba(255, 255, 255, 0.2) !important;
}
</style>
{% endblock %}
